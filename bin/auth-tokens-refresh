#!/usr/bin/env python
"""
    auth-tokens-refresh [OPTION]

Exchanges a Tapis Oauth client refresh token for a new access and refresh token.

 Options:
    -z, --access_token   Access token to be refreshed.
    -r, --refresh_token  Current refresh token.
    -k, --apikey         Oauth client key.
    -s, --apisecret      Oauth client secret.
    -D, --displayonly    Display but do not store the access token.
    -c, --cachedir       Session cache directory.
"""
from __future__ import print_function
import argparse
import os
import sys
from agavepy.agave import Agave
from agavepy import tokens, utils

REFRESHING_TOKEN_MSG = 'Refreshing access token...'
SELECT_TENANT_ID_MSG = 'Select a valid tenant id.'
TOKEN_OPERATION_FAILED = 'Token issuance failed: {0}'
TOKEN_NOT_STORED_MSG = 'Token was not stored in session cache.'

parser = argparse.ArgumentParser(
    description="Exchanges a Tapis Oauth client refresh token for a new access and refresh token.")

parser.add_argument("-t", "--tenant", default=None,
                    help="Tenant id for session.")
parser.add_argument("-z", "--access_token", dest="access_token",
                    default=None,
                    help="Access token to be refreshed.")
parser.add_argument("-r", "--refresh_token", dest="refresh_token",
                    default=None,
                    help="Current refresh token.")
parser.add_argument("-k", "--apikey", default=None,
                    help="Oauth client key.")
parser.add_argument("-s", "--apisecret", default=None,
                    help="Oauth client secret.")
parser.add_argument("-D", "--displayonly", dest="displayonly",
                    action="store_true",
                    help="Display but do not store the access token.")
parser.add_argument("-S", "--storetoken", dest="storetoken",
                    action="store_true",
                    help="Store tokens for later use (default).")
parser.add_argument(
    "-c",
    "--cachedir",
    default=utils.credentials_cache_dir(),
    help="Session cache directory.")
parser.add_argument(
    "--tenants",
    default=utils.tenants_url(),
    help="URL with tenant listing.")


if __name__ == "__main__":
    args = parser.parse_args()

    agave = Agave()
    cache_dir = args.cachedir
    tenant_id = args.tenant
    api_key = args.apikey
    api_secret = args.apisecret
    access_token = args.access_token
    refresh_token = args.refresh_token
    display_only = args.displayonly
    new_token = None

    try:
        # Init an Agave client from the CLI options alone
        if api_key is not None and api_secret is not None and \
                refresh_token is not None and access_token is not None:
            # utils.print_stderr('Instantiating Oauth client from options')
            # Don't cache tokens if the client was configured purely from args
            display_only = True

            if tenant_id is not None:
                agave.tenant_id = tenant_id
            try:
                agave.init(args.tenants)
            except KeyError:
                utils.print_stderr(SELECT_TENANT_ID_MSG)
                agave.list_tenants()
                sys.exit(1)

            utils.print_stderr(REFRESHING_TOKEN_MSG)
            tok = tokens.refresh_token(
                api_key, api_secret, refresh_token, agave.api_server)
            new_token = tok.get('access_token')
            token_expires = tok.get('expires_at')
        else:
            # utils.print_stderr('Loading Oauth client configuration')
            config_file = utils.sessions_cache_path(cache_dir)
            # Check if there may be a session already saved.
            if os.path.exists(config_file):
                try:
                    agave.load_configs(
                        cache_dir=cache_dir)
                except KeyError:
                    raise
            utils.print_stderr(REFRESHING_TOKEN_MSG)

            agave.refresh_tokens()
            new_token = agave.token
            token_expires = agave.expires_at

        print(new_token)
        utils.print_stderr('New token eexpires: {}'.format(token_expires))

        # Save session.
        if not display_only:
            agave.save_configs(cache_dir)
        else:
            utils.print_stderr(TOKEN_NOT_STORED_MSG)

        sys.exit(0)

    except Exception as err:
        utils.print_stderr(TOKEN_OPERATION_FAILED.format(err))
        sys.exit(1)
