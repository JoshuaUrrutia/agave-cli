#!/usr/bin/env python
"""
    Usage: files-pems-update [OPTIONS] agave://SYSTEM/PATH

Edits user permissions on a file or directory.

Flags:
  -u, --username        The user whose permissions should be listed
  -p, --permission      The permission to set. Valid values are READ,
                        WRITE, EXECUTE, READ_WRITE, READ_EXECUTE,
                        WRITE_EXECUTE, ALL, and NONE
  -r, --recursive       Recursively apply permissions to folder contents
  -h, --help            Display this help and exit
"""
from __future__ import print_function
import argparse
import os
import sys
from agavepy.agave import Agave
from agavepy import utils

parser = argparse.ArgumentParser(
    description="Edits user permissions on a file or directory.")

parser.add_argument(
    "filepath", help="Path where permissions should be edited")

parser.add_argument("-u", "--username", help="Edit this user's permissions")

parser.add_argument(
    "-p",
    "--permission",
    choices=[
        "READ", "WRITE", "EXECUTE", "READ_WRITE", "READ_EXECUTE",
        "WRITE_EXECUTE", "ALL", "NONE"
    ],
    help="User permission(s) to set.")

parser.add_argument(
    "-r",
    "--recursive",
    action="store_true",
    help="Recursively apply to directory contents")

parser.add_argument(
    "-c",
    "--cachedir",
    default=utils.credentials_cache_dir(),
    help="Session cache directory.")

if __name__ == "__main__":
    try:
        args = parser.parse_args()

        cache_dir = args.cachedir
        uri = args.filepath
        username = args.username
        permissions = args.permission
        recursive = args.recursive

        agave = Agave()
        agave.load_client(cache_dir)

        # Refresh tokens if necessary.
        agave.refresh_tokens()
        # Save out session cache
        if agave.client_name is not None:
            agave.save_configs(cache_dir)
        # Obtain uri - remove the prefix 'agave://'.
        uri = uri[len("agave://"):]

        # Edit user permissions.
        agave.files_pems_update(
            uri, username, permissions, recursive=recursive)
        sys.exit(0)

    except Exception as err:
        print(err)
        sys.exit(1)
